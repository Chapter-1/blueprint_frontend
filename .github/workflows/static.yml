name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      
      - name: Create env file
        run: |
          echo "VITE_APP_API_URL=${{ secrets.VITE_APP_API_URL }}" > .env.production
          echo "NODE_ENV=production" >> .env.production
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build with Debugging
        run: |
          export GITHUB_PAGES=true
          npm run build --verbose
        env:
          VITE_APP_API_URL: ${{ secrets.VITE_APP_API_URL }}
      
      - name: Add CNAME file
        run: echo 'blu2print.site' > ./dist/CNAME
      
      - name: List dist directory contents
        run: ls -la ./dist
      
      # GitHub Pages 특정 형식으로 아티팩트 준비
      - name: Prepare GitHub Pages artifact
        run: |
          # 전용 디렉토리 생성
          mkdir -p ./_site
          # dist 내용물을 _site로 복사
          cp -r ./dist/* ./_site/
      
      # GitHub Pages에 요구되는 방식으로 아티팩트 업로드
      - name: Upload GitHub Pages artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./_site
          retention-days: 1
          if-no-files-found: error

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: github-pages
